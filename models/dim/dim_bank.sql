-- models/dim/dim_bank.sql
-- Dimension table for Banks

-- 1. Define Table Structure (SCD Type 1 Example)
CREATE TABLE IF NOT EXISTS gold.finance.dim_bank (
  bank_key BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
  bank_id_source INT NOT NULL, -- Natural key from source
  bank_name STRING,
  display_name STRING,
  address STRING,
  phone STRING,
  city STRING,
  state STRING,
  zip STRING,
  r1_fsid STRING, -- Assuming STRING, adjust if needed
  auto_structure BOOLEAN, -- Assuming BOOLEAN, adjust if needed
  logo_url STRING,
  is_active BOOLEAN,
  description STRING,
  sort_order INT, -- Assuming INT, adjust if needed
  -- Removed duplicate display_name
  use_in_states STRING, -- Assuming STRING, adjust if needed
  signing_solution STRING, -- Assuming STRING, adjust if needed
  _fivetran_deleted BOOLEAN,
  _fivetran_synced TIMESTAMP,
  min_credit_score INT, -- Assuming INT, adjust if needed
  auto_structure_refi BOOLEAN, -- Assuming BOOLEAN, adjust if needed
  auto_structure_buyout BOOLEAN, -- Assuming BOOLEAN, adjust if needed
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  _load_timestamp TIMESTAMP, -- Metadata: When the record was loaded/updated
  _source_table STRING -- Metadata: Source table name
)
USING DELTA
COMMENT 'Dimension table storing bank information.'
TBLPROPERTIES (
    'delta.autoOptimize.optimizeWrite' = 'true',
    'delta.autoOptimize.autoCompact' = 'true',
    'delta.columnMapping.mode' = 'name' -- Required for IDENTITY columns
);

-- Add constraint if bank_id_source should be unique (requires DBR 11.1+ or Unity Catalog)
-- ALTER TABLE gold.finance.dim_bank ADD CONSTRAINT dim_bank_id_unique UNIQUE (bank_id_source);

-- 2. Merge incremental changes
MERGE INTO gold.finance.dim_bank AS target
USING (
  -- Source query: Select latest data from source bank table
  -- Replace 'bronze.leaseend_db_public.banks' with your actual source table
  -- Adjust column names (e.g., id, name, displayname, active) to match your source
  SELECT
    CAST(id AS INT) AS bank_id_source,
    name AS bank_name,
    displayname AS display_name,
    address,
    phone,
    city,
    state,
    zip,
    r1_fsid,
    CAST(auto_structure AS BOOLEAN) AS auto_structure, -- Explicit CAST
    logo_url,
    CAST(active AS BOOLEAN) AS is_active, -- Renamed source column alias
    description,
    CAST(sort_order AS INT) AS sort_order, -- Explicit CAST
    -- displayname AS display_name_duplicate, -- Removed duplicate
    use_in_states,
    signing_solution,
    _fivetran_deleted,
    _fivetran_synced,
    CAST(min_credit_score AS INT) AS min_credit_score, -- Explicit CAST
    CAST(auto_structure_refi AS BOOLEAN) AS auto_structure_refi, -- Explicit CAST
    CAST(auto_structure_buyout AS BOOLEAN) AS auto_structure_buyout, -- Explicit CAST
    created_at,
    updated_at,
    'bronze.leaseend_db_public.banks' as _source_table
  FROM bronze.leaseend_db_public.banks -- <<< Replace with your source table
  WHERE id IS NOT NULL
  -- Add QUALIFY ROW_NUMBER() if source table has history per bank ID
  -- QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY update_timestamp DESC) = 1
) AS source
-- Match on the natural key
ON target.bank_id_source = source.bank_id_source

-- Update existing banks if relevant attributes changed (SCD Type 1)
WHEN MATCHED AND (
    target.bank_name <> source.bank_name OR
    target.display_name <> source.display_name OR
    target.address <> source.address OR
    target.phone <> source.phone OR
    target.city <> source.city OR
    target.state <> source.state OR
    target.zip <> source.zip OR
    target.r1_fsid <> source.r1_fsid OR
    target.auto_structure <> source.auto_structure OR
    target.logo_url <> source.logo_url OR
    target.is_active <> source.is_active OR
    target.description <> source.description OR
    target.sort_order <> source.sort_order OR
    target.use_in_states <> source.use_in_states OR
    target.signing_solution <> source.signing_solution OR
    target._fivetran_deleted <> source._fivetran_deleted OR
    -- target._fivetran_synced <> source._fivetran_synced OR -- Timestamps can be tricky to compare directly
    target.min_credit_score <> source.min_credit_score OR
    target.auto_structure_refi <> source.auto_structure_refi OR
    target.auto_structure_buyout <> source.auto_structure_buyout
    -- created_at comparison might not be needed if it's immutable
    -- updated_at comparison might not be needed if only tracking latest change
  ) THEN
  UPDATE SET
    target.bank_name = source.bank_name,
    target.display_name = source.display_name,
    target.address = source.address,
    target.phone = source.phone,
    target.city = source.city,
    target.state = source.state,
    target.zip = source.zip,
    target.r1_fsid = source.r1_fsid,
    target.auto_structure = source.auto_structure,
    target.logo_url = source.logo_url,
    target.is_active = source.is_active,
    target.description = source.description,
    target.sort_order = source.sort_order,
    target.use_in_states = source.use_in_states,
    target.signing_solution = source.signing_solution,
    target._fivetran_deleted = source._fivetran_deleted,
    target._fivetran_synced = source._fivetran_synced,
    target.min_credit_score = source.min_credit_score,
    target.auto_structure_refi = source.auto_structure_refi,
    target.auto_structure_buyout = source.auto_structure_buyout,
    target.created_at = source.created_at,
    target.updated_at = source.updated_at,
    target._source_table = source._source_table,
    target._load_timestamp = current_timestamp()

-- Insert new banks (bank_key is auto-generated)
WHEN NOT MATCHED THEN
  INSERT (
    bank_id_source,
    bank_name,
    display_name,
    address,
    phone,
    city,
    state,
    zip,
    r1_fsid,
    auto_structure,
    logo_url,
    is_active,
    description,
    sort_order,
    use_in_states,
    signing_solution,
    _fivetran_deleted,
    _fivetran_synced,
    min_credit_score,
    auto_structure_refi,
    auto_structure_buyout,
    created_at,
    updated_at,
    _source_table,
    _load_timestamp
  )
  VALUES (
    source.bank_id_source,
    source.bank_name,
    source.display_name,
    source.address,
    source.phone,
    source.city,
    source.state,
    source.zip,
    source.r1_fsid,
    source.auto_structure,
    source.logo_url,
    source.is_active,
    source.description,
    source.sort_order,
    source.use_in_states,
    source.signing_solution,
    source._fivetran_deleted,
    source._fivetran_synced,
    source.min_credit_score,
    source.auto_structure_refi,
    source.auto_structure_buyout,
    source.created_at,
    source.updated_at,
    source._source_table,
    current_timestamp()
  ); 